# in ci_cd.yaml

name: CI/CD Elixir

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  OTP_VRSN: 26.2.4
  ELIXIR_VRSN: 1.16.2
  MIX_ENV: test

jobs:
  ci:
    runs-on: ubuntu-latest
    name: Compile with mix test, format, dialyzer & unused deps check
    env:
      MIX_ENV: test
    services:
      postgres:
        image: postgres:16.2
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1.17.3
        with:
          version-file: .tool-versions 
          version-type: strict

      - name: Cache Deps Directory
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Get Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: mix deps.get

      - run: mix compile --warnings-as-errors

      - name: Check unused dependencies 
        run: mix deps.unlock --check-unused

      - name: Check Formatting 
        run: mix format --check-formatted

      - name: Run Dialyzer for Static Analysis 
        run: mix dialyzer --format github

  build-push:
    runs-on: ubuntu-latest
    needs: ci
    name: Build Docker image & push to ghcr.io
    steps:
      - uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/marka2g/belly_bot
          tags: |
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=long

      - uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=registry,ref=ghcr.io/marka2g/belly_bot:cache
          cache-to: type=registry,ref=ghcr.io/marka2g/belly_bot:cache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          build-args: |
            ELIXIR_VERSION=${{ env.ELIXIR_VERSION }}
            OTP_VERSION=${{ env.ERLANG_VERSION }}